"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class FileType(_FileType, metaclass=_FileTypeEnumTypeWrapper):
    pass
class _FileType:
    V = typing.NewType('V', builtins.int)
class _FileTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FileType.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    dir = FileType.V(0)
    img = FileType.V(1)
    txt = FileType.V(2)
    exe = FileType.V(3)
    bin = FileType.V(4)
    enc = FileType.V(5)

dir = FileType.V(0)
img = FileType.V(1)
txt = FileType.V(2)
exe = FileType.V(3)
bin = FileType.V(4)
enc = FileType.V(5)
global___FileType = FileType


class GameStatus(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    NONES_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    @property
    def nones(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HostNode]: ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        nones : typing.Optional[typing.Iterable[global___HostNode]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"name",b"name",u"nones",b"nones"]) -> None: ...
global___GameStatus = GameStatus

class HostNode(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    HOST_FIELD_NUMBER: builtins.int
    FILES_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    host: typing.Text = ...
    @property
    def files(self) -> global___TreeSystem: ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        host : typing.Text = ...,
        files : typing.Optional[global___TreeSystem] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"files",b"files"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"files",b"files",u"host",b"host",u"name",b"name"]) -> None: ...
global___HostNode = HostNode

class TreeSystem(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    SUB_FIELD_NUMBER: builtins.int
    READABLE_FIELD_NUMBER: builtins.int
    WRITABLE_FIELD_NUMBER: builtins.int
    EXECUTABLE_FIELD_NUMBER: builtins.int
    VISIBLE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    type: global___FileType.V = ...
    data: typing.Text = ...
    @property
    def sub(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TreeSystem]: ...
    readable: builtins.bool = ...
    writable: builtins.bool = ...
    executable: builtins.bool = ...
    visible: builtins.bool = ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        type : global___FileType.V = ...,
        data : typing.Text = ...,
        sub : typing.Optional[typing.Iterable[global___TreeSystem]] = ...,
        readable : builtins.bool = ...,
        writable : builtins.bool = ...,
        executable : builtins.bool = ...,
        visible : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"data",b"data",u"executable",b"executable",u"name",b"name",u"readable",b"readable",u"sub",b"sub",u"type",b"type",u"visible",b"visible",u"writable",b"writable"]) -> None: ...
global___TreeSystem = TreeSystem
